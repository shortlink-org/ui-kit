npm:
  stage: publish
  image: node:24-alpine

  variables:
    NPM_TOKEN: "$CI_JOB_TOKEN"
    PACKAGE_PATH: "${PACKAGE_PATH:-.}"
    # turn on provenance
    NPM_CONFIG_PROVENANCE: "false"

  id_tokens:
    SIGSTORE_ID_TOKEN:
      aud: sigstore

  before_script:
    # Auth for the project-scoped registry
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=${CI_JOB_TOKEN}" > .npmrc
    - echo "//${CI_SERVER_HOST}/api/v4/projects/${CI_PROJECT_ID}/packages/npm/:always-auth=true"        >> .npmrc
    - export NODE_AUTH_TOKEN="$CI_JOB_TOKEN"
    # pnpm
    - corepack enable && corepack prepare pnpm@latest --activate
    - cd "$PACKAGE_PATH"

  script:
    - |
      set -e

      # ----- decide version (semver tag vs main) -----
      if [ -n "$CI_COMMIT_TAG" ] && echo "$CI_COMMIT_TAG" | grep -Eq '^v?[0-9]+\.[0-9]+\.[0-9]+(-.*)?$'; then
        VERSION="$(echo "$CI_COMMIT_TAG" | sed 's/^v//')"
        DIST_TAG="latest"
      elif [ "$CI_COMMIT_BRANCH" = "main" ]; then
        VERSION="0.$(date -u '+%Y%m%d').$(date -u '+%H%M%S')"   # 0.YYYYMMDD.HHMMSS
        DIST_TAG="canary"
      else
        echo "not a release or main build – skip"; exit 0
      fi

      # ----- skip if already published -----
      PKG=$(npm pkg get name | tr -d '"')
      if npm view "${PKG}@${VERSION}" \
           --registry "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/" \
           >/dev/null 2>&1; then
        echo "♦ ${PKG}@${VERSION} already exists – done"; exit 0
      fi

      # ----- build & publish with provenance -----
      pnpm install --frozen-lockfile
      pnpm version --no-git-tag-version "$VERSION"
      pnpm run build
      npm publish --provenance \
        --registry "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/" \
        --tag "$DIST_TAG" \
        --ignore-scripts

  rules:
    - if: '$CI_COMMIT_TAG'
    - if: '$CI_COMMIT_BRANCH == "main"'
    - when: never
